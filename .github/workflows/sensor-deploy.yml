name: deploy sensor

on:
  workflow_dispatch: 

jobs: 
  build-and-deploy:
    runs-on: ubuntu-18.04
    env:
      DOCKER_REGISTRY: hub.docker.com
      DOCKER_IMAGE: ekhorn/litr:latest
      DOCKER_TARGET_PLATFORM: linux/arm64
    defaults:
      run:
        working-directory: sensor
    steps:
      - name: Checkout the code       
        uses: actions/checkout@v1

      - name: Set up Docker Buildx      
        uses: crazy-max/ghaction-docker-buildx@v1      
        with:        
          buildx-version: latest    

      - name: Prepare      
        if: success()      
        id: prepare      
        run: |        
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}

      - name: Check installed packages
        run: | 
          apt list nvidia* 
          ls /etc/docker 
          cat /etc/docker/daemon.json

      - name: Install missing Nvidia Docker dependencies
        run: | 
          curl -s -L https://nvidia.github.io/nvidia-container-runtime/gpgkey | \
          sudo apt-key add -
          distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
          curl -s -L https://nvidia.github.io/nvidia-container-runtime/$distribution/nvidia-container-runtime.list | \
          sudo tee /etc/apt/sources.list.d/nvidia-container-runtime.list
          sudo apt-get update
          sudo echo "{"runtimes":{"nvidia":{"path":"/usr/bin/nvidia-container-runtime","runtimeArgs":[]}},"default-runtime":"nvidia"}" > '/etc/docker/daemon.json'
      
      - name: Check installed packages
        run: | 
          apt list nvidia* 
          ls /etc/docker 
          cat /etc/docker/daemon.json

      - name: Run Buildx (push image)
        if: success()
        run: >
          docker buildx build
          --platform ${{ steps.prepare.outputs.docker_platform }}
          --tag ${{ steps.prepare.outputs.docker_image }}
          --file ./dockerfile
          --output type=image,push=true .
